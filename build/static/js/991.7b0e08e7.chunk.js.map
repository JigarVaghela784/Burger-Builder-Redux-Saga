{"version":3,"file":"static/js/991.7b0e08e7.chunk.js","mappings":"6KACA,EAAwB,qB,SCkCxB,EAjCc,SAAC,GAA2B,IAAzBA,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WAChBC,EAAc,GACpB,IAAK,IAAIC,KAAUF,EACjBC,EAAYE,KAAK,CAAEC,KAAMF,EAAQG,OAAQL,EAAWE,KAEtD,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,kBACEC,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,QAAS,MACTC,OAAQ,kBANZ,UAUGN,EAAGJ,KAVN,KAUcI,EAAGH,OAVjB,MAQOG,EAAGJ,KAKb,IACD,OACE,+BACE,iBAAKW,UAAWN,EAAhB,WACE,wCAAgBH,MAChB,uCACY,4BAASP,WAK5B,E,6BCSD,GAAeiB,E,QAAAA,KAdS,SAACC,GACvB,MAAO,CACLC,OAAQD,EAAME,MAAMA,MACpBC,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAME,MAAMG,WACnBC,MAAON,EAAMO,KAAKD,MAClBE,OAAOR,EAAMO,KAAKC,OAErB,IAC0B,SAACC,GAC1B,MAAO,CACLC,aAAc,SAACJ,EAAME,GAAP,OAAkBC,EAASE,EAAAA,GAAmBL,EAAME,GAApD,EAEjB,GACD,EApCe,YAA6D,IAA1DP,EAAyD,EAAzDA,OAAQE,EAAiD,EAAjDA,QAASO,EAAwC,EAAxCA,aAAcN,EAA0B,EAA1BA,MAAOE,EAAmB,EAAnBA,MAAME,EAAa,EAAbA,QAC5DI,EAAAA,EAAAA,YAAU,WACRF,EAAaJ,EAAME,EACpB,GAAE,CAACE,EAAcJ,EAAME,IAExB,IAAIK,GAAS,SAACC,EAAA,EAAD,IACRX,IACHU,EAASZ,EAAOX,KAAI,SAACY,GAAD,OAClB,SAAC,EAAD,CAAsBpB,MAAOoB,EAAMpB,MAAOC,WAAYmB,EAAMnB,YAAhDmB,EAAMa,GADA,KAItB,IAAIC,EAAe,KAInB,OAHIZ,IACFY,GAAe,SAACC,EAAA,EAAD,CAAkBb,MAAOA,MAGxC,gCACGS,EACAG,IAGN,G","sources":["webpack://my-burger-app/./src/Components/Order/Order.module.css?64fc","Components/Order/Order.js","Components/Orders/Orders.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Order\":\"Order_Order__7Xpi0\"};","import React from \"react\";\nimport style from \"./Order.module.css\";\nconst Order = ({ price, ingredient }) => {\n  const ingredients = [];\n  for (let igName in ingredient) {\n    ingredients.push({ name: igName, amount: ingredient[igName] });\n  }\n  const ingredientOutput = ingredients.map((ig) => {\n    return (\n      <span\n        style={{\n          textTransForm: \"capitalize\",\n          display: \"inline-block\",\n          margin: \"0 8px\",\n          padding: \"5px\",\n          border: \"1px solid #ccc\",\n        }}\n        key={ig.name}\n      >\n        {ig.name} ({ig.amount})\n      </span>\n    );\n  });\n  return (\n    <>\n      <div className={style.Order}>\n        <p>Ingredients:{ingredientOutput}</p>\n        <p>\n          price: Rs.<strong>{price}</strong>\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default Order;\n","import React, { useEffect } from \"react\";\nimport Order from \"../Order/Order\";\nimport WithErrorHandler from \"../UI/hoc/WithErrorHandler/WithErrorHandler\";\nimport Spinner from \"../UI/Spinner/Spinner\";\nimport * as actions from \"../../store/action/index\";\nimport { connect } from \"react-redux\";\nconst Orders = ({ orders, loading, onFetchOrder, error, token,userId }) => {\n  useEffect(() => {\n    onFetchOrder(token,userId);\n  }, [onFetchOrder, token,userId]);\n\n  let Orders = <Spinner />;\n  if (!loading) {\n    Orders = orders.map((order) => (\n      <Order key={order.id} price={order.price} ingredient={order.ingredient} />\n    ));\n  }\n  let errorMessage = null;\n  if (error) {\n    errorMessage = <WithErrorHandler error={error} />;\n  }\n  return (\n    <>\n      {Orders}\n      {errorMessage}\n    </>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    orders: state.order.order,\n    loading: state.order.loading,\n    error: state.order.orderError,\n    token: state.auth.token,\n    userId:state.auth.userId\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchOrder: (token,userId) => dispatch(actions.orderFetch(token,userId)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Orders);\n"],"names":["price","ingredient","ingredients","igName","push","name","amount","ingredientOutput","map","ig","style","textTransForm","display","margin","padding","border","className","connect","state","orders","order","loading","error","orderError","token","auth","userId","dispatch","onFetchOrder","actions","useEffect","Orders","Spinner","id","errorMessage","WithErrorHandler"],"sourceRoot":""}